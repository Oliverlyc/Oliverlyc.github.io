<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[CentOS系统下安装指定版本的PHP]]></title>
      <url>/2017/10/01/CentOS%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%AE%89%E8%A3%85%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E7%9A%84PHP/</url>
      <content type="html"><![CDATA[<p>在CentOS 6.5 系统下,使用<code>yum install php</code>只会默认安装php5.3.x这个版本,所以为了安装其他版本的php我们需要添加第三方源<br><strong>已经安装过旧版本的请点击这里</strong>      </p>
<h2 id="第一步-安装remi库"><a href="#第一步-安装remi库" class="headerlink" title="第一步:安装remi库"></a>第一步:安装remi库</h2><p>（如果输入<code>vim /etc/yum.repos.d/remi.repo</code>提示创建新文件,请看此步骤）     </p>
<p>REMI仓库提供了CentOS和RHEL的核心包的更新版本,尤其是最新的PHP/MySQL系列.        </p>
<blockquote>
<p>注：不要再启用REMI仓库的时候运行<code>yum update</code>,可能会触发意外的更新。<br><a id="more"></a><br>在CentOS 6.x上:<br>    <code># sudo rpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi</code><br>    <code># sudo rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm</code><br>在CentOS 7.x上:<br>    <code># sudo rpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi</code><br>    <code># sudo rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm</code><br>使用<code># yum repolist disabled | grep remi</code>查看REMI仓库<br><img src="http://ox5ha61h3.bkt.clouddn.com//install_php/install_php.png" alt="img1">      </p>
<h2 id="第二步-安装PHP"><a href="#第二步-安装PHP" class="headerlink" title="第二步:安装PHP"></a>第二步:安装PHP</h2><ol>
<li>添加源<br>32位:<br> <code># wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.5.1-1.el5.rf.i386.rpm</code><br> <code># rpm -ivh rpmforge-release-0.5.1-1.el5.rf.i386.rpm</code><br>64位:<br> <code># wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.5.1-1.el5.rf.x86_64.rpm</code><br> <code># rpm -ivh rpmforge-release-0.5.1-1.el5.rf.x86_64.rpm</code> </li>
<li>使用<code>yum install php(版本号)w</code>来安装PHP</li>
</ol>
</blockquote>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux添加环境变量]]></title>
      <url>/2017/09/30/linux%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      <content type="html"><![CDATA[<p>在Linux系统下,安装完应用程序之后,输入应用名称会提示”<strong>command not found</strong>“,为了避免每次都要打开文件夹执行程序,引入了环境变量,将路径添加到<strong>$PATH</strong>中     </p>
<ol>
<li><code># vim ~/.bashrc</code>   </li>
<li>在最后一行加入<br> <code># PATH</code><br> <code>export PATH=路径:$PATH</code>    </li>
<li>保存退出执行命令<br> <code># source ~/.bashrc</code></li>
</ol>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[centOS解决'用户不在sudoers文件中']]></title>
      <url>/2017/09/23/centOS%E8%A7%A3%E5%86%B3-%E7%94%A8%E6%88%B7%E4%B8%8D%E5%9C%A8sudoers%E6%96%87%E4%BB%B6%E4%B8%AD/</url>
      <content type="html"><![CDATA[<p>在win10安装centos6.5的虚拟机<br>使用非root账号时，使用<code>sudo</code>命令出现如下警告:<br>    不在sudoers文件中,此事将被报告.<br><a id="more"></a><br>文件路径:<em>/etc/sudoers</em><br>解决方法:   </p>
<blockquote>
<ol>
<li>使用<code>su</code>命令切换到root账号,调用CentOS自带的<code>visudo</code>命令添加账号     </li>
<li>找到 <strong>root ALL=(ALL:ALL) ALL</strong> 并在下边添加自己的账号,<strong>name ALL=(ALL:ALL) ALL</strong>    </li>
<li><code>:wq</code>保存后,即可使用<code>sudo</code>命令</li>
</ol>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> sudo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS6.5安装Metasploit]]></title>
      <url>/2017/09/23/CentOS6-5%E5%AE%89%E8%A3%85Metasploit/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> 网络安全 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[数据库事务的4大特性]]></title>
      <url>/2017/09/19/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E7%9A%844%E5%A4%A7%E7%89%B9%E6%80%A7/</url>
      <content type="html"><![CDATA[<h2 id="1-原子性"><a href="#1-原子性" class="headerlink" title="1. 原子性"></a>1. <strong>原子性</strong></h2><pre><code>事务的所有操作,要么全部成功执行,要么全部失败,要么完全应用到数据库中,要么对数据库没有任何影响.   
</code></pre><a id="more"></a> 
<h2 id="2-一致性"><a href="#2-一致性" class="headerlink" title="2. 一致性"></a>2. <strong>一致性</strong></h2><pre><code>  事务必须使数据库从一个一致性状态转变为另一个一致性状态,事务执行前后必须保持一致    
比如:银行转账,A转给B,但是A,B的总钱数不会变.
</code></pre><h2 id="3-隔离性"><a href="#3-隔离性" class="headerlink" title="3. 隔离性"></a>3. <strong>隔离性</strong></h2><pre><code>系统保证事务不会受其他并发事务的影响,多个并发事务之间需要隔离,对于并发事务A,B,在A看来,要么B先于A开始执行,要么在A后执行,两者互不影响
</code></pre><h2 id="4-持久性"><a href="#4-持久性" class="headerlink" title="4. 持久性"></a>4. <strong>持久性</strong></h2><pre><code>事务一旦被执行,对数据库的改变是永久的,即使在执行事务的时候,数据库出现了问题,也要完全执行事务,否则会出现返回事务处理完毕,但是数据库没有执行事务的错误
</code></pre>]]></content>
      
        <categories>
            
            <category> 数据库 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[php配置json文件]]></title>
      <url>/2017/09/16/php%E9%85%8D%E7%BD%AEjson%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h2 id="php数组数据写入json文件"><a href="#php数组数据写入json文件" class="headerlink" title="php数组数据写入json文件"></a>php数组数据写入json文件</h2><blockquote>
<p><code>&lt;?php</code><br>　　<code>$data = array</code><br>　　<code>$data[&#39;a&#39;] = &#39;test&#39;;</code><br>　　<code>$data[&#39;b&#39;] = &#39;abc&#39;;</code><br>　　<code>$json_string = json_encode($data);</code><br>     <a id="more"></a><br>　　//把PHP数组转化为json字符串<br>　　<code>file_put_contents(&#39;test.json&#39;,$json_string);</code><br>　　//写入文件<br><code>?&gt;</code>       </p>
</blockquote>
<h2 id="读取json文件数据到PHP变量中"><a href="#读取json文件数据到PHP变量中" class="headerlink" title="读取json文件数据到PHP变量中"></a>读取json文件数据到PHP变量中</h2><blockquote>
<p><code>&lt;?php</code><br>　　<code>$json_string = file_get_content(&#39;test.json&#39;);</code><br>　　//读取文件<br>　　<code>$data = json_decode($json_string,true);</code><br>　　//把json字符串转换成PHP数组<br><code>?&gt;</code></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> json </tag>
            
            <tag> PHP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git常用命令]]></title>
      <url>/2017/09/16/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<blockquote>
<p><code>$ git log</code><br>    //查看版本<br><code>$ pwd</code><br>    //显示当前目录<br><a id="more"></a>        </p>
</blockquote>
<h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><blockquote>
<p><code>$ mkdir &lt;repository name&gt;</code>//创建目录<br><code>$ git init</code>//将目录提交到暂存区(目录下会有一个.git文件夹)<br><code>$ git add &lt;file name&gt;</code>//将文件添加到仓库(可以添加多个)<br><code>$ git commit -m &quot;添加说明$&quot;</code>//提交到仓库<br><code>$ git status</code>//查看仓库状态<br><code>$ git diff</code>//查看修改   </p>
</blockquote>
<h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><blockquote>
<p><code>$ git reset --hard HEAD^</code><br>    //回退到上一个版本<br><code>$ rm test.txt</code><br>    //删除工作区文件   </p>
</blockquote>
<h2 id="添加远程库"><a href="#添加远程库" class="headerlink" title="添加远程库"></a>添加远程库</h2><blockquote>
<p><code>$ git remote add origin &lt;herf&gt;</code><br><code>$ git push (-u //远程库为空) origin master</code><br>    //推送本地库到远程</p>
</blockquote>
<h2 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h2><blockquote>
<p><code>$ git clone &lt;herf&gt;</code></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Note </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/03/19/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
